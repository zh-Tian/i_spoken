<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.mapper.FundsMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.pojo.Funds" >
    <id column="fundsid" property="fundsid" jdbcType="INTEGER" />
    <result column="fundsnum" property="fundsnum" jdbcType="DOUBLE" />
    <result column="fundscreatetime" property="fundscreatetime" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="bussinessid" property="bussinessid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fundsid, fundsnum, fundscreatetime, userid, bussinessid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.springmvc.pojo.FundsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from funds
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from funds
    where fundsid = #{fundsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from funds
    where fundsid = #{fundsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springmvc.pojo.FundsExample" >
    delete from funds
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springmvc.pojo.Funds" >
    insert into funds (fundsid, fundsnum, fundscreatetime, 
      userid, bussinessid)
    values (#{fundsid,jdbcType=INTEGER}, #{fundsnum,jdbcType=DOUBLE}, #{fundscreatetime,jdbcType=VARCHAR}, 
      #{userid,jdbcType=INTEGER}, #{bussinessid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.pojo.Funds" >
    insert into funds
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fundsid != null" >
        fundsid,
      </if>
      <if test="fundsnum != null" >
        fundsnum,
      </if>
      <if test="fundscreatetime != null" >
        fundscreatetime,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="bussinessid != null" >
        bussinessid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fundsid != null" >
        #{fundsid,jdbcType=INTEGER},
      </if>
      <if test="fundsnum != null" >
        #{fundsnum,jdbcType=DOUBLE},
      </if>
      <if test="fundscreatetime != null" >
        #{fundscreatetime,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="bussinessid != null" >
        #{bussinessid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springmvc.pojo.FundsExample" resultType="java.lang.Integer" >
    select count(*) from funds
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update funds
    <set >
      <if test="record.fundsid != null" >
        fundsid = #{record.fundsid,jdbcType=INTEGER},
      </if>
      <if test="record.fundsnum != null" >
        fundsnum = #{record.fundsnum,jdbcType=DOUBLE},
      </if>
      <if test="record.fundscreatetime != null" >
        fundscreatetime = #{record.fundscreatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.bussinessid != null" >
        bussinessid = #{record.bussinessid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update funds
    set fundsid = #{record.fundsid,jdbcType=INTEGER},
      fundsnum = #{record.fundsnum,jdbcType=DOUBLE},
      fundscreatetime = #{record.fundscreatetime,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      bussinessid = #{record.bussinessid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.pojo.Funds" >
    update funds
    <set >
      <if test="fundsnum != null" >
        fundsnum = #{fundsnum,jdbcType=DOUBLE},
      </if>
      <if test="fundscreatetime != null" >
        fundscreatetime = #{fundscreatetime,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="bussinessid != null" >
        bussinessid = #{bussinessid,jdbcType=INTEGER},
      </if>
    </set>
    where fundsid = #{fundsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.pojo.Funds" >
    update funds
    set fundsnum = #{fundsnum,jdbcType=DOUBLE},
      fundscreatetime = #{fundscreatetime,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      bussinessid = #{bussinessid,jdbcType=INTEGER}
    where fundsid = #{fundsid,jdbcType=INTEGER}
  </update>
  <select id="selectFundsByUserid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      select * from funds where userid = #{userid}
  </select>
</mapper>